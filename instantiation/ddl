rop dataverse channels if exists;
create dataverse channels;
use dataverse channels;

create type UserType as closed {
    recordId: string,
    userId: string,
    userName: string,
    password: string,
    email: string
}

create dataset UserDataset (UserType)
primary key recordId;

create type UserSubscriptionType as closed {
    recordId: string,
    userSubscriptionId: string,
    channelSubscriptionId: string,
    userId: string,
    channelName: string,
    timestamp: string,
    lastResultTimestamp: string,
    resultsDataset: string
}

create dataset UserSubscriptionDataset(UserSubscriptionType)
primary key recordId;

create type ChannelSubscriptionType as closed{
    recordId: string,
    channelName:string,
    parameters: string,
    channelSubscriptionId: string
}

create dataset ChannelSubscriptionDataset(ChannelSubscriptionType)
primary key recordId;

create type TweetMessageTypeuuid as closed {
    tweetid: uuid,
    message-text: string
}

create dataset TweetMessageuuids(TweetMessageTypeuuid)
primary key tweetid autogenerated;

create function NearbyTweetsContainingText($text) {
  for $tweet in dataset TweetMessageuuids
    where contains($tweet.message-text,$text)
    return {"timestamp": current-datetime(), "message" : $tweet.message-text}
};

create repetitive channel nearbyTweetChannel using NearbyTweetsContainingText@1 period duration("PT10S");

create type UserLocation as closed {
    recordId: uuid,
    location: point,
    user-id: string,
    timeoffset: float,
    timestamp: datetime
}

create type EmergencyShelter as closed {
    name: string,
    location: point
}

create type EmergencyReport as closed {
    reportId: uuid,
    severity: int,
    impactZone: circle,
    timeoffset: float,
    timestamp: datetime,
    duration: float,
    message: string,
    emergencyType: string
}

create dataset UserLocations(UserLocation)
primary key recordId autogenerated;

create dataset EmergencyShelters(EmergencyShelter)
primary key name;

create dataset EmergencyReports(EmergencyReport)
primary key reportId autogenerated;


create function allEmergencies($emergencyType){
    for $report in dataset EmergencyReports
    return $report
}

create repetitive channel allEmergenciesChannel using allEmergencies@1 period duration("PT10S");

